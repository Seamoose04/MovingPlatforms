<xml xmlns="https://developers.google.com/blockly/xml"><variables><variable id=";8k0shfxgj$+`RMLVpl2">i</variable><variable id="4bdYS[zlU`!b#l{(eEoO">platforms</variable></variables><block type="pxt-on-start" id=";Lkooy~ot8l5ijR-$%R;" x="20" y="20"><statement name="HANDLER"><block type="typescript_statement" id="npgpr(g2VQZO_z=bi-X`" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let platforms: MovingPlatform[] = []" numlines="1" declaredvars="platforms"></mutation><next><block type="typescript_statement" id="0EfE.6ijhgEYGlkb0zy=" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="class MovingPlatform {" line1="    xMin: number;" line2="    xMax: number;" line3="    width: number;" line4="    y: number;" line5="    lead: number;" line6="    dir: number = 1;" line7="    platform_image: Image;" line8="    background_image: Image;" line9="    constructor(_xMin: number, _xMax: number, _width: number, _y: number, _platform_image: Image, _background_image: Image) {" line10="        this.xMin = _xMin;" line11="        this.xMax = _xMax;" line12="        this.width = _width;" line13="        this.y = _y;" line14="" line15="        this.platform_image = _platform_image;" line16="        this.background_image = _background_image;" line17="" line18="        this.lead = this.xMin + this.width;" line19="" line20="        for (let j = this.xMin; j &lt; this.xMin + this.width; j++) {" line21="            tiles.setTileAt(tiles.getTileLocation(j, this.y), this.platform_image);" line22="            tiles.setWallAt(tiles.getTileLocation(j, this.y), true);" line23="        }" line24="    }" line25="" line26="    update(): void {" line27="        tiles.setTileAt(tiles.getTileLocation(this.lead, this.y), this.platform_image);" line28="        tiles.setWallAt(tiles.getTileLocation(this.lead, this.y), true);" line29="" line30="        tiles.setTileAt(tiles.getTileLocation(this.lead + (-this.dir * this.width), this.y), this.background_image);" line31="        tiles.setWallAt(tiles.getTileLocation(this.lead + (-this.dir * this.width), this.y), false);" line32="" line33="        this.lead += this.dir;" line34="" line35="        if (this.lead == this.xMin) {" line36="            this.dir = 1;" line37="            this.lead = this.xMin + this.width;" line38="        }" line39="        if (this.lead == this.xMax) {" line40="            this.dir = -1;" line41="            this.lead = this.xMax - this.width;" line42="        }" line43="    }" line44="    static fromCurrentTilemap(platform_image: Image, start_image: Image, end_image: Image, background_image: Image) {" line45="        let pTileX = 0;" line46="        let platform_tiles = tiles.getTilesByType(platform_image);" line47="        let start_tiles = tiles.getTilesByType(start_image);" line48="        let end_tiles = tiles.getTilesByType(end_image);" line49="" line50="        start_tiles.forEach(function (location: tiles.Location, index: number): void {" line51="            let col = location.col;" line52="            let xMin = col;" line53="            let y = location.row;" line54="            while (tiles.tileImageAtLocation(tiles.getTileLocation(col, y)) !== platform_image) {" line55="                console.log(col);" line56="                col++;" line57="            }" line58="            let width = 0;" line59="            while (tiles.tileImageAtLocation(tiles.getTileLocation(col, y)) == platform_image) {" line60="                width++;" line61="                col++;" line62="            }" line63="            while (tiles.tileImageAtLocation(tiles.getTileLocation(col, y)) !== end_image) {" line64="                col++;" line65="            }" line66="            let xMax = col;" line67="            tiles.setTileAt(tiles.getTileLocation(col, location.row), background_image);" line68="" line69="            tiles.setTileAt(location, background_image);" line70="            platforms.push(new MovingPlatform(xMin, xMax, width, y, platform_image, background_image));" line71="        });" line72="    }" line73="}" numlines="74"></mutation></block></next></block></statement></block><block type="gameinterval" id="wLy]K}$%e?`3j-`tC~(K" x="1197" y="20"><value name="period"><shadow type="timePicker" id="b?:1[l.suTBqgBHP?r#R"><field name="ms">300</field></shadow></value><statement name="HANDLER"><block type="pxt_controls_for" id="5Nm*MjQ!H,3,ei_,$:qj"><value name="VAR"><shadow type="variables_get_reporter" id="a4:!BbPCN55?J*bl}5wS"><field name="VAR" id=";8k0shfxgj$+`RMLVpl2">i</field></shadow></value><value name="TO"><shadow type="math_whole_number"><field name="NUM">0</field></shadow><block type="math_arithmetic" id="i;26.^!S4#=3[AWalx5p"><field name="OP">MINUS</field><value name="A"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="lists_length" id="jtwy9a:PoFIcE}[R4;6$"><value name="VALUE"><block type="variables_get" id="9T[Y+~}YQ=2{@u*,Exp9"><field name="VAR" id="4bdYS[zlU`!b#l{(eEoO">platforms</field></block></value></block></value><value name="B"><shadow type="math_number" id="TnOtRbS%_PUKwY397FE("><field name="NUM">1</field></shadow></value></block></value><statement name="DO"><block type="typescript_statement" id="#8U(!D1QbsdI6%T+^lnr" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="platforms[i].update();" numlines="1"></mutation></block></statement></block></statement></block></xml>